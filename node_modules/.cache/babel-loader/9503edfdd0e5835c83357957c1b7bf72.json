{"ast":null,"code":"var _jsxFileName = \"/Users/ashiawhite/Desktop/Dynamic_Web_Exercises/Exercise_Two/src/containers/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; //<p> Weather: {weatherData.weather && weatherData.weather[0].all}okta </p>\n//API Keys\n\nconst defaultKey = \"ede293b25c093960ebbf782841b0b308\";\n\nfunction Home() {\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"Dallas\");\n  const [currentTemperature, setCurrentTemperature] = useState(\"\");\n  const [highTemperature, setHighTemperature] = useState(\"\");\n  const [lowTemperature, setLowTemperature] = useState(\"\");\n  const [currentHumidity, setCurrentHumidity] = useState(\"\");\n  let history = useHistory();\n  useEffect(() => {\n    let searchParams = history.location.search;\n    let urlParams = new URLSearchParams(searchParams);\n    console.log(\"urlParams\", urlParams);\n    let city = urlParams.get(\"city\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  useEffect(() => {\n    //Make a get request for the weather by city\n    if (city) {\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${defaultKey}`).then(function (response) {\n        // handle success\n        setWeatherData(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n    }\n  }, [city]);\n  console.log(\"weatherData\", weatherData);\n  useEffect(() => {\n    if (weatherData.main) {\n      setCurrentTemperature(weatherData.main.temp);\n      setHighTemperature(weatherData.main.temp_max);\n      setLowTemperature(weatherData.main.temp_min);\n    }\n  }, [weatherData]);\n  return React.createElement(\"div\", {\n    className: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Weather in \", city, \" \"), React.createElement(\"div\", {\n    className: \"WeatherInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherInfo_Image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"WeatherInfo_Data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CurrentTemperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" \", weatherData.main && weatherData.main.temp, \"\\xB0\")), React.createElement(\"div\", {\n    className: \"OtherTemperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" High Temp: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, weatherData.main && weatherData.main.temp_max, \"\\xB0 \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \" Low Temp: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, weatherData.main && weatherData.main.temp_min, \"\\xB0 \"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" Humididty: \", weatherData.main && weatherData.main.humidity, \"%\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Wind: \", weatherData.wind && weatherData.wind.speed, \"mph \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" Pressure: \", weatherData.main && weatherData.main.pressure, \"psi \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" Clouds: \", weatherData.clouds && weatherData.clouds.all, \"okta \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ashiawhite/Desktop/Dynamic_Web_Exercises/Exercise_Two/src/containers/Home.js"],"names":["React","useEffect","useState","axios","useHistory","defaultKey","Home","weatherData","setWeatherData","city","setCity","currentTemperature","setCurrentTemperature","highTemperature","setHighTemperature","lowTemperature","setLowTemperature","currentHumidity","setCurrentHumidity","history","searchParams","location","search","urlParams","URLSearchParams","console","log","get","then","response","data","catch","error","main","temp","temp_max","temp_min","humidity","wind","speed","pressure","clouds","all"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\n\n//<p> Weather: {weatherData.weather && weatherData.weather[0].all}okta </p>\n\n  //API Keys\nconst defaultKey = \"ede293b25c093960ebbf782841b0b308\";\n\nfunction Home() {\n\n\n\n  const [weatherData, setWeatherData] = useState({});\n  const [city, setCity] = useState(\"Dallas\");\n  const[currentTemperature, setCurrentTemperature]= useState(\"\");\n  const[highTemperature, setHighTemperature]=useState(\"\");\n  const[lowTemperature,setLowTemperature]=useState(\"\");\n  const[currentHumidity,setCurrentHumidity]=useState(\"\");\n\n\n\n  let history = useHistory();\n\n  useEffect(() => {\n\n    let searchParams = history.location.search;\n    let urlParams = new URLSearchParams(searchParams);\n    console.log(\"urlParams\",urlParams);\n    let city = urlParams.get(\"city\");\n    if (city) {\n        setCity(city);\n      }\n    }, [history]);\n\n\n\n\n  useEffect(() => {\n    //Make a get request for the weather by city\n    if (city){\n\n    axios\n\n    .get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${defaultKey}`\n        )\n    .then(function (response) {\n    // handle success\n      setWeatherData(response.data);\n      })\n   .catch(function (error) {\n    // handle error\n    console.log(error);\n  });\n\n}\n}, [city]);\n    console.log(\"weatherData\",weatherData);\n\n\n  useEffect(() => {\n    if (weatherData.main) {\n      setCurrentTemperature(weatherData.main.temp);\n      setHighTemperature(weatherData.main.temp_max);\n      setLowTemperature(weatherData.main.temp_min);\n\n\n    }\n\n\n  }, [weatherData]);\n\n\n  return (\n    <div className=\"Home\">\n      <h1> Weather in {city} </h1>\n    <div className=\"WeatherInfo\">\n      <div className=\"WeatherInfo_Image\">\n      <img src=\"\" alt=\"\"/>\n      </div>\n    <div className=\"WeatherInfo_Data\">\n      <div className=\"CurrentTemperature\">\n        <p> {weatherData.main && weatherData.main.temp}&#176;</p>\n      </div>\n      <div className=\"OtherTemperature\">\n        <p> High Temp: <strong>{weatherData.main && weatherData.main.temp_max}&#176; </strong>\n        </p>\n        <p> Low Temp: <strong>{weatherData.main && weatherData.main.temp_min}&#176; </strong>\n        </p>\n\n      </div>\n\n      <p> Humididty: {weatherData.main && weatherData.main.humidity}%</p>\n      <p> Wind: {weatherData.wind && weatherData.wind.speed}mph </p>\n      <p> Pressure: {weatherData.main && weatherData.main.pressure}psi </p>\n      <p> Clouds: {weatherData.clouds && weatherData.clouds.all}okta </p>\n\n\n      <div>\n        <img src=\"\" alt=\"\" />\n      </div>\n\n\n\n    </div>\n\n  </div>\n\n</div>\n\n\n\n\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}